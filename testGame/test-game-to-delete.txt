// // Allow for moves on the map-table locations
  // // (this will be removed)
  // for (let i = 0; i < nationlist.length; i++) {
  //   const nation = nationlist[i];
  //   $('#' + nation).on('click', makeMove(nation, attacker, support, convoy, modifier, visited, rowCounter));
  // }



  !--         This next table is the test board.
            Can be uncommented if necessary
        <table class="game-board">
            <tr>
                <td id="gen">GEN</td>
                <td id="luc">LUC</td>
                <td id="sal">SAL</td>
            </tr>
            <tr>
                <td id="mil">MIL</td>
                <td id="flo">FLO</td>
                <td id="rom">ROM</td>
            </tr>
            <tr>
                <td id="avi">AVI</td>
                <td id="mar">MAR</td>
                <td id="gol">GOL</td>
            </tr>
        </table> -->



function makeMove(nation, attacker, support, convoy, modifier, visited, counter) {
  return function () {
    if (support.classList.contains('blue-highlight') && convoy.classList.contains('blue-highlight')) {
      alert('Support and convoy may not be selected simultaneously. Please deselect both and try again.');
    }
    if (modifier.length === 0) {
      if (support.classList.contains('blue-highlight') || convoy.classList.contains('blue-highlight')) {
        $('#' + nation).addClass('green-highlight');
        modifier.push(nation);
        return;
      }
    }
    if (attacker.length === 1) {
      let initializer = attacker.pop();
      if (initializer === nation) {
        // HOLD ORDER
        holdOrder(nation, counter);
      } else if (support.classList.contains('blue-highlight')) {
        // SUPPORT ORDER
        supportOrder(initializer, modifier.pop(), nation, counter);
      } else if (convoy.classList.contains('blue-highlight')) {
        // CONVOY ORDER
        convoyOrder(initializer, modifier.pop(), nation, counter);
      } else {
        // ATTACK ORDER
        attackOrder(initializer, nation, counter);
      }
      visited.push(initializer);
    } else {
      if (visited.includes(nation)) {
        alert('You have already used ' + nation.toUpperCase() + ' in a move. Please remove that order before continuing.');
        return;
      }
      $('#' + nation).addClass('blue-highlight');
      attacker.push(nation);
    }
  };
}